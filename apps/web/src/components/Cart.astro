---
import type { Cart } from "@withstorefront/storefront";
import Trash from "phosphor-astro/Trash.astro";
import Price from "./Price.astro";
import Image from "./Image.astro";

export interface Props {
  cart: Cart;
}

const { cart } = Astro.props;
---

<h1>Your cart</h1>
<table>
  <thead>
    <tr>
      <th colspan="2">Product</th>
      <th>Quantity</th>
      <th>Total</th>
    </tr>
  </thead>
  <tbody>
    {
      cart.lineItems.map((lineItem) => (
        <tr>
          <td>{lineItem.image && <Image {...lineItem.image} />}</td>
          <td>
            <p>{lineItem.name}</p>
            <Price as="small" value={lineItem.subtotalPrice} />
            <small>{lineItem.variant.name}</small>
          </td>
          <td>
            <input
              name="quantity"
              type="number"
              min="1"
              step="1"
              value={lineItem.quantity}
              data-lineid={lineItem.id}
            />
            <button data-lineid={lineItem.id}>
              <Trash height={20} width={20} />
            </button>
          </td>
          <Price as="td" value={lineItem.subtotalPrice} />
        </tr>
      ))
    }
  </tbody>
</table>
<footer>
  <div>
    <h2>Estimated total</h2>
    <Price value={cart.subtotalPrice} />
  </div>
  <small>Taxes, discounts, and shipping calculated at checkout.</small>
  <a href={cart.url}>Check out</a>
</footer>

<script>
  // TEMP: move this to client-side logic or pull in HTMX
  const btns = document.querySelectorAll<HTMLButtonElement>(
    "button[data-lineid]",
  );

  btns.forEach((btn) => {
    btn.onclick = async (event: MouseEvent) => {
      event.stopPropagation();
      event.preventDefault();

      const formData = new FormData();
      formData.append("lineId", btn.dataset.lineid ?? "");

      await fetch("/api/cart", {
        method: "DELETE",
        body: formData,
      });

      location.reload();
    };
  });

  // TEMP: move this to client-side logic or pull in HTMX
  const quantities = document.querySelectorAll<HTMLInputElement>(
    "input[name='quantity']",
  );

  quantities.forEach((input) => {
    input.onchange = async (event) => {
      event.stopPropagation();
      event.preventDefault();

      const formData = new FormData();
      formData.append("lineId", input.dataset.lineid ?? "");
      formData.append("quantity", input.value);

      await fetch("/api/cart", {
        method: "PUT",
        body: formData,
      });

      location.reload();
    };
  });
</script>

<style>
  th {
    text-align: start;
  }

  :is(td, th):last-child {
    text-align: end;
  }

  td img {
    width: 7.5rem;
  }
</style>
